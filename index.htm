<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UTM Source Query</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
            max-width: 600px;
            margin: auto;
            text-align: center;
        }
        button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
        #response {
            margin-top: 20px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>UTM Source Query</h1>
        <button id="fetchButton">Process UTM Query</button>
        <div id="response"></div>
    </div>
    <script>
        async function query(data) {
            const response = await fetch(
                "https://api-inference.huggingface.co/models/google-bert/bert-large-uncased-whole-word-masking-finetuned-squad",
                {
                    headers: {
                        Authorization: "Bearer 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",
                        "Content-Type": "application/json",
                    },
                    method: "POST",
                    body: JSON.stringify(data),
                }
            );
            return response.json();
        }

        async function fetchContext() {
            const response = await fetch("https://datasets-server.huggingface.co/first-rows?dataset=karan6001%2FConversions&config=default&split=train");
            if (!response.ok) {
                throw new Error("Failed to fetch context data");
            }
            const data = await response.json();
            // Extract relevant context, update based on the actual response structure
            return JSON.stringify(data); // Adjust as needed for actual dataset structure
        }

        document.getElementById("fetchButton").addEventListener("click", async () => {
            try {
                // Get the current URL
                const url = window.location.href;

                // Extract utm_source parameter
                const urlParams = new URL(url).searchParams;
                const utmSource = urlParams.get("utm_source");

                if (!utmSource) {
                    document.getElementById("response").innerText = "No utm_source parameter found in the URL.";
                    return;
                }

                // Fetch context dynamically
                const context = await fetchContext();

                const question = `reply in yes / no - Is the source "${utmSource}" the top performing count of conversions?`;

                const apiResponse = await query({
                    inputs: { question, context }
                });

                const answer = apiResponse?.answer || "No response";

                document.getElementById("response").innerText = `API Response: ${answer}`;

                if (answer.toLowerCase().includes("yes")) {
                    alert("Additional discount if you buy now!");
                }
            } catch (error) {
                document.getElementById("response").innerText = `Error: ${error.message}`;
            }
        });
    </script>
</body>
</html>
